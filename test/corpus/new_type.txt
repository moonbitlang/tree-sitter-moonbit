================================================================================
new_type
================================================================================
type New(Int)
--------------------------------------------------------------------------------

(structure
  (structure_item
    (type_definition
      (identifier
        (uppercase_identifier))
      (type
        (tuple_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))))))

================================================================================
phantom type
================================================================================
type Length[_] Int
type Length[_]

type Kilometer
type Mile

fn[T] add(x: Length[T], y:Length[T]) -> Length[T] {
  Length::Length(x.0 + y.0)
}

let d_km: Length[Kilometer] = Length(10)
let d_mile: Length[Mile] = Length(16)
--------------------------------------------------------------------------------

(structure
  (structure_item
    (type_definition
      (identifier
        (uppercase_identifier))
      (type_parameters
        (type_identifier
          (identifier
            (lowercase_identifier))))
      (type
        (apply_type
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))))))
  (structure_item
    (type_definition
      (identifier
        (uppercase_identifier))
      (type_parameters
        (type_identifier
          (identifier
            (lowercase_identifier))))))
  (structure_item
    (type_definition
      (identifier
        (uppercase_identifier))))
  (structure_item
    (type_definition
      (identifier
        (uppercase_identifier))))
  (structure_item
    (function_definition
      (type_parameters
        (type_identifier
          (identifier
            (uppercase_identifier))))
      (function_identifier
        (lowercase_identifier))
      (parameters
        (parameter
          (positional_parameter
            (lowercase_identifier)
            (type_annotation
              (type
                (apply_type
                  (qualified_type_identifier
                    (identifier
                      (uppercase_identifier)))
                  (type_arguments
                    (type
                      (apply_type
                        (qualified_type_identifier
                          (identifier
                            (uppercase_identifier)))))))))))
        (parameter
          (positional_parameter
            (lowercase_identifier)
            (type_annotation
              (type
                (apply_type
                  (qualified_type_identifier
                    (identifier
                      (uppercase_identifier)))
                  (type_arguments
                    (type
                      (apply_type
                        (qualified_type_identifier
                          (identifier
                            (uppercase_identifier))))))))))))
      (return_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))
            (type_arguments
              (type
                (apply_type
                  (qualified_type_identifier
                    (identifier
                      (uppercase_identifier)))))))))
      (block_expression
        (statement_expression
          (expression
            (compound_expression
              (simple_expression
                (apply_expression
                  (simple_expression
                    (constructor_expression
                      (type_name
                        (qualified_type_identifier
                          (identifier
                            (uppercase_identifier))))
                      (uppercase_identifier)))
                  (arguments
                    (argument
                      (expression
                        (compound_expression
                          (binary_expression
                            (compound_expression
                              (simple_expression
                                (access_expression
                                  (simple_expression
                                    (qualified_identifier
                                      (lowercase_identifier)))
                                  (accessor))))
                            (compound_expression
                              (simple_expression
                                (access_expression
                                  (simple_expression
                                    (qualified_identifier
                                      (lowercase_identifier)))
                                  (accessor)))))))))))))))))
  (structure_item
    (value_definition
      (lowercase_identifier)
      (type_annotation
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))
            (type_arguments
              (type
                (apply_type
                  (qualified_type_identifier
                    (identifier
                      (uppercase_identifier)))))))))
      (expression
        (compound_expression
          (simple_expression
            (apply_expression
              (simple_expression
                (constructor_expression
                  (uppercase_identifier)))
              (arguments
                (argument
                  (expression
                    (compound_expression
                      (simple_expression
                        (atomic_expression
                          (literal
                            (integer_literal))))))))))))))
  (structure_item
    (value_definition
      (lowercase_identifier)
      (type_annotation
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))
            (type_arguments
              (type
                (apply_type
                  (qualified_type_identifier
                    (identifier
                      (uppercase_identifier)))))))))
      (expression
        (compound_expression
          (simple_expression
            (apply_expression
              (simple_expression
                (constructor_expression
                  (uppercase_identifier)))
              (arguments
                (argument
                  (expression
                    (compound_expression
                      (simple_expression
                        (atomic_expression
                          (literal
                            (integer_literal)))))))))))))))
