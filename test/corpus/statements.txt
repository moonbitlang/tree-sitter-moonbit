================================================================================
raise statement
================================================================================
fn init {
  raise @json.JsonDecodeError((path, "Expected an array"))
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (raise_expression
            (expression
              (compound_expression
                (simple_expression
                  (apply_expression
                    (simple_expression
                      (constructor_expression
                        (package_identifier)
                        (dot_uppercase_identifier)))
                    (arguments
                      (argument
                        (expression
                          (compound_expression
                            (simple_expression
                              (tuple_expression
                                (expression
                                  (compound_expression
                                    (simple_expression
                                      (qualified_identifier
                                        (lowercase_identifier)))))
                                (expression
                                  (compound_expression
                                    (simple_expression
                                      (atomic_expression
                                        (literal
                                          (string_literal
                                            (string_fragment
                                              (unescaped_string_fragment))))))))))))))))))))))))

================================================================================
raise statement in match
================================================================================
fn init {
  match a {
    _ => raise @json.JsonDecodeError((path, "Expected an array"))
  }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (match_expression
              (compound_expression
                (simple_expression
                  (qualified_identifier
                    (lowercase_identifier))))
              (case_clause
                (pattern
                  (simple_pattern))
                (statement_expression
                  (raise_expression
                    (expression
                      (compound_expression
                        (simple_expression
                          (apply_expression
                            (simple_expression
                              (constructor_expression
                                (package_identifier)
                                (dot_uppercase_identifier)))
                            (arguments
                              (argument
                                (expression
                                  (compound_expression
                                    (simple_expression
                                      (tuple_expression
                                        (expression
                                          (compound_expression
                                            (simple_expression
                                              (qualified_identifier
                                                (lowercase_identifier)))))
                                        (expression
                                          (compound_expression
                                            (simple_expression
                                              (atomic_expression
                                                (literal
                                                  (string_literal
                                                    (string_fragment
                                                      (unescaped_string_fragment))))))))))))))))))))))))))))

================================================================================
unfinished code
================================================================================
fn main {
  ...
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (unfinished))))))

================================================================================
return expression
================================================================================
fn main {
  return 3
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (return_expression
            (expression
              (compound_expression
                (simple_expression
                  (atomic_expression
                    (literal
                      (integer_literal))))))))))))
