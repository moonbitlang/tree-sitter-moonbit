================================================================================
add
================================================================================
fn init {
  let mut a = 4
  a += 5
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (let_mut_expression
            (lowercase_identifier)
            (expression
              (compound_expression
                (simple_expression
                  (atomic_expression
                    (literal
                      (integer_literal))))))))
        (statement_expression
          (assign_expression
            (left_value
              (qualified_identifier
                (lowercase_identifier)))
            (assign_operator)
            (expression
              (compound_expression
                (simple_expression
                  (atomic_expression
                    (literal
                      (integer_literal))))))))))))

================================================================================
add
================================================================================
fn init {
  let mut a = 4
  a -= 5
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (let_mut_expression
            (lowercase_identifier)
            (expression
              (compound_expression
                (simple_expression
                  (atomic_expression
                    (literal
                      (integer_literal))))))))
        (statement_expression
          (assign_expression
            (left_value
              (qualified_identifier
                (lowercase_identifier)))
            (assign_operator)
            (expression
              (compound_expression
                (simple_expression
                  (atomic_expression
                    (literal
                      (integer_literal))))))))))))

================================================================================
mul
================================================================================
fn init {
  let mut a = 4
  a *= 5
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (let_mut_expression
            (lowercase_identifier)
            (expression
              (compound_expression
                (simple_expression
                  (atomic_expression
                    (literal
                      (integer_literal))))))))
        (statement_expression
          (assign_expression
            (left_value
              (qualified_identifier
                (lowercase_identifier)))
            (assign_operator)
            (expression
              (compound_expression
                (simple_expression
                  (atomic_expression
                    (literal
                      (integer_literal))))))))))))

================================================================================
div
================================================================================
fn init {
  let mut a = 4
  a /= 5
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (let_mut_expression
            (lowercase_identifier)
            (expression
              (compound_expression
                (simple_expression
                  (atomic_expression
                    (literal
                      (integer_literal))))))))
        (statement_expression
          (assign_expression
            (left_value
              (qualified_identifier
                (lowercase_identifier)))
            (assign_operator)
            (expression
              (compound_expression
                (simple_expression
                  (atomic_expression
                    (literal
                      (integer_literal))))))))))))

================================================================================
mod
================================================================================
fn init {
  a %= 5
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (assign_expression
            (left_value
              (qualified_identifier
                (lowercase_identifier)))
            (assign_operator)
            (expression
              (compound_expression
                (simple_expression
                  (atomic_expression
                    (literal
                      (integer_literal))))))))))))
