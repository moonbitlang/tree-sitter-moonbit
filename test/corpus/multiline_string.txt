================================================================================
multiline string
================================================================================
fn init {
  #| a
  #| b
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (compound_expression
              (simple_expression
                (atomic_expression
                  (literal
                    (multiline_string_literal
                      (multiline_string_fragment
                        (multiline_string_content))
                      (multiline_string_fragment
                        (multiline_string_content)))))))))))))

================================================================================
multiline string (left aligned)
================================================================================
fn init {
#| a
#| b
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (compound_expression
              (simple_expression
                (atomic_expression
                  (literal
                    (multiline_string_literal
                      (multiline_string_fragment
                        (multiline_string_content))
                      (multiline_string_fragment
                        (multiline_string_content)))))))))))))

================================================================================
multiline string (with pipe)
================================================================================
fn init {
  #| a
  #| b
  |> println
  #| c
  |> println
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (compound_expression
              (binary_expression
                (compound_expression
                  (simple_expression
                    (atomic_expression
                      (literal
                        (multiline_string_literal
                          (multiline_string_fragment
                            (multiline_string_content))
                          (multiline_string_fragment
                            (multiline_string_content)))))))
                (compound_expression
                  (simple_expression
                    (qualified_identifier
                      (lowercase_identifier))))))))
        (statement_expression
          (expression
            (compound_expression
              (binary_expression
                (compound_expression
                  (simple_expression
                    (atomic_expression
                      (literal
                        (multiline_string_literal
                          (multiline_string_fragment
                            (multiline_string_content)))))))
                (compound_expression
                  (simple_expression
                    (qualified_identifier
                      (lowercase_identifier))))))))))))

================================================================================
multiline string (mixed indentation)
================================================================================
fn init {
  let x = #|0
#| a
  #|  b
    #|c
#| d
  |> println
|> println
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (let_expression
            (pattern
              (simple_pattern
                (lowercase_identifier)))
            (expression
              (compound_expression
                (binary_expression
                  (compound_expression
                    (binary_expression
                      (compound_expression
                        (simple_expression
                          (atomic_expression
                            (literal
                              (multiline_string_literal
                                (multiline_string_fragment
                                  (multiline_string_content))
                                (multiline_string_fragment
                                  (multiline_string_content))
                                (multiline_string_fragment
                                  (multiline_string_content))
                                (multiline_string_fragment
                                  (multiline_string_content))
                                (multiline_string_fragment
                                  (multiline_string_content)))))))
                      (compound_expression
                        (simple_expression
                          (qualified_identifier
                            (lowercase_identifier))))))
                  (compound_expression
                    (simple_expression
                      (qualified_identifier
                        (lowercase_identifier)))))))))))))

================================================================================
multiline interpolation
================================================================================
fn main {
  $|a
  $| \{a}
  $|\{b + c * d}
  $|\{f(g)}
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (compound_expression
              (simple_expression
                (atomic_expression
                  (literal
                    (multiline_string_literal
                      (multiline_interpolation_fragment
                        (multiline_interpolation_content))
                      (multiline_interpolation_fragment
                        (multiline_interpolation_content)
                        (multiline_interpolation_content
                          (interpolator
                            (expression
                              (compound_expression
                                (simple_expression
                                  (qualified_identifier
                                    (lowercase_identifier))))))))
                      (multiline_interpolation_fragment
                        (multiline_interpolation_content
                          (interpolator
                            (expression
                              (compound_expression
                                (binary_expression
                                  (compound_expression
                                    (simple_expression
                                      (qualified_identifier
                                        (lowercase_identifier))))
                                  (compound_expression
                                    (binary_expression
                                      (compound_expression
                                        (simple_expression
                                          (qualified_identifier
                                            (lowercase_identifier))))
                                      (compound_expression
                                        (simple_expression
                                          (qualified_identifier
                                            (lowercase_identifier))))))))))))
                      (multiline_interpolation_fragment
                        (multiline_interpolation_content
                          (interpolator
                            (expression
                              (compound_expression
                                (simple_expression
                                  (apply_expression
                                    (simple_expression
                                      (qualified_identifier
                                        (lowercase_identifier)))
                                    (arguments
                                      (argument
                                        (expression
                                          (compound_expression
                                            (simple_expression
                                              (qualified_identifier
                                                (lowercase_identifier)))))))))))))))))))))))))
