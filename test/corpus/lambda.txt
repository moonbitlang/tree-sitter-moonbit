================================================================================
basic
================================================================================
fn init {
  fn (x: Int) {
    x
  }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (compound_expression
              (simple_expression
                (anonymous_lambda_expression
                  (parameters
                    (parameter
                      (positional_parameter
                        (lowercase_identifier)
                        (type_annotation
                          (type
                            (apply_type
                              (qualified_type_identifier
                                (identifier
                                  (uppercase_identifier)))))))))
                  (block_expression
                    (statement_expression
                      (expression
                        (compound_expression
                          (simple_expression
                            (qualified_identifier
                              (lowercase_identifier))))))))))))))))

================================================================================
one-line
================================================================================
fn init {
  fn (x: Int) { x }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (compound_expression
              (simple_expression
                (anonymous_lambda_expression
                  (parameters
                    (parameter
                      (positional_parameter
                        (lowercase_identifier)
                        (type_annotation
                          (type
                            (apply_type
                              (qualified_type_identifier
                                (identifier
                                  (uppercase_identifier)))))))))
                  (block_expression
                    (statement_expression
                      (expression
                        (compound_expression
                          (simple_expression
                            (qualified_identifier
                              (lowercase_identifier))))))))))))))))

================================================================================
lambda_curry
================================================================================
fn init {
  let gt = fn (a : Int) { fn (b : Int) { a > b } }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (let_expression
            (pattern
              (simple_pattern
                (lowercase_identifier)))
            (expression
              (compound_expression
                (simple_expression
                  (anonymous_lambda_expression
                    (parameters
                      (parameter
                        (positional_parameter
                          (lowercase_identifier)
                          (type_annotation
                            (type
                              (apply_type
                                (qualified_type_identifier
                                  (identifier
                                    (uppercase_identifier)))))))))
                    (block_expression
                      (statement_expression
                        (expression
                          (compound_expression
                            (simple_expression
                              (anonymous_lambda_expression
                                (parameters
                                  (parameter
                                    (positional_parameter
                                      (lowercase_identifier)
                                      (type_annotation
                                        (type
                                          (apply_type
                                            (qualified_type_identifier
                                              (identifier
                                                (uppercase_identifier)))))))))
                                (block_expression
                                  (statement_expression
                                    (expression
                                      (compound_expression
                                        (binary_expression
                                          (compound_expression
                                            (simple_expression
                                              (qualified_identifier
                                                (lowercase_identifier))))
                                          (compound_expression
                                            (simple_expression
                                              (qualified_identifier
                                                (lowercase_identifier)))))))))))))))))))))))))

================================================================================
matrix functions
================================================================================
fn init {
  fn boolean_or {
    true, _ => true
    _, true => true
    _, _    => false
  }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (named_matrix_expression
            (lowercase_identifier)
            (matrix_case_clause
              (pattern
                (simple_pattern
                  (literal
                    (boolean_literal))))
              (pattern
                (simple_pattern))
              (statement_expression
                (expression
                  (compound_expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (boolean_literal))))))))
            (matrix_case_clause
              (pattern
                (simple_pattern))
              (pattern
                (simple_pattern
                  (literal
                    (boolean_literal))))
              (statement_expression
                (expression
                  (compound_expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (boolean_literal))))))))
            (matrix_case_clause
              (pattern
                (simple_pattern))
              (pattern
                (simple_pattern))
              (statement_expression
                (expression
                  (compound_expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (boolean_literal))))))))))))))

================================================================================
matrix functions complex
================================================================================
fn init {
  let _ = fn { x => x + 1 }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (let_expression
            (pattern
              (simple_pattern))
            (expression
              (compound_expression
                (simple_expression
                  (anonymous_matrix_lambda_expression
                    (matrix_case_clause
                      (pattern
                        (simple_pattern
                          (lowercase_identifier)))
                      (statement_expression
                        (expression
                          (compound_expression
                            (binary_expression
                              (compound_expression
                                (simple_expression
                                  (qualified_identifier
                                    (lowercase_identifier))))
                              (compound_expression
                                (simple_expression
                                  (atomic_expression
                                    (literal
                                      (integer_literal))))))))))))))))))))
