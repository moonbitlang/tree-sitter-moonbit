================================================================================
trait definitions
================================================================================
trait A {
  a(Self) -> Int
}
--------------------------------------------------------------------------------

(structure
  (statement_expression
    (trait_definition
      (identifier
        (uppercase_identifier))
      (trait_method_declaration
        (function_identifier
          (lowercase_identifier))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (return_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))
      (semicolon
        (automatic_semicolon)))))

================================================================================
trait definitions
================================================================================
trait A {
  a(Int, Self) -> Self
  a(Self)
}
--------------------------------------------------------------------------------

(structure
  (statement_expression
    (trait_definition
      (identifier
        (uppercase_identifier))
      (trait_method_declaration
        (function_identifier
          (lowercase_identifier))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (return_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))
      (semicolon
        (automatic_semicolon))
      (trait_method_declaration
        (function_identifier
          (lowercase_identifier))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))
      (semicolon
        (automatic_semicolon)))))

================================================================================
trait definitions with error
================================================================================
trait A {
  a!(Int, Self) -> Self
}
--------------------------------------------------------------------------------

(structure
  (statement_expression
    (trait_definition
      (identifier
        (uppercase_identifier))
      (trait_method_declaration
        (function_identifier
          (lowercase_identifier))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (return_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))
      (semicolon
        (automatic_semicolon)))))

================================================================================
trait definitions with type parameters
================================================================================
trait A {
  a[X](Int, X) -> X
  a![Y](Int, Y) -> Self
}
--------------------------------------------------------------------------------

(structure
  (statement_expression
    (trait_definition
      (identifier
        (uppercase_identifier))
      (trait_method_declaration
        (function_identifier
          (lowercase_identifier))
        (type_parameters
          (type_identifier
            (identifier
              (uppercase_identifier))))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (return_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))
      (semicolon
        (automatic_semicolon))
      (trait_method_declaration
        (function_identifier
          (lowercase_identifier))
        (type_parameters
          (type_identifier
            (identifier
              (uppercase_identifier))))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (return_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))
      (semicolon
        (automatic_semicolon)))))

================================================================================
trait definitions with labeled parameters
================================================================================
trait A {
  a(Int, a~ : Int, b~:Int) -> Self
}
--------------------------------------------------------------------------------

(structure
  (statement_expression
    (trait_definition
      (identifier
        (uppercase_identifier))
      (trait_method_declaration
        (function_identifier
          (lowercase_identifier))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (trait_method_parameter
          (parameter_label
            (lowercase_identifier))
          (type_annotation
            (colon)
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))
        (trait_method_parameter
          (parameter_label
            (lowercase_identifier))
          (type_annotation
            (colon)
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))
        (return_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))
      (semicolon
        (automatic_semicolon)))))

================================================================================
trait definitions with visibility
================================================================================
pub(all) trait A {
  a(Int, a~ : Int, b~:Int) -> Self
}
--------------------------------------------------------------------------------

(structure
  (statement_expression
    (trait_definition
      (visibility
        (pub_attribute))
      (identifier
        (uppercase_identifier))
      (trait_method_declaration
        (function_identifier
          (lowercase_identifier))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (trait_method_parameter
          (parameter_label
            (lowercase_identifier))
          (type_annotation
            (colon)
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))
        (trait_method_parameter
          (parameter_label
            (lowercase_identifier))
          (type_annotation
            (colon)
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))
        (return_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))
      (semicolon
        (automatic_semicolon)))))

================================================================================
trait definitions with super trait
================================================================================
trait A: B + Compare {
  a(Self) -> Int
}

trait B: @a.T + @c.D {
  x(Self) -> Int
}
--------------------------------------------------------------------------------

(structure
  (statement_expression
    (trait_definition
      (identifier
        (uppercase_identifier))
      (super_trait_declaration
        (colon)
        (qualified_type_identifier
          (identifier
            (uppercase_identifier)))
        (qualified_type_identifier
          (identifier
            (uppercase_identifier))))
      (trait_method_declaration
        (function_identifier
          (lowercase_identifier))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (return_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))
      (semicolon
        (automatic_semicolon))))
  (semicolon
    (automatic_semicolon))
  (statement_expression
    (trait_definition
      (identifier
        (uppercase_identifier))
      (super_trait_declaration
        (colon)
        (qualified_type_identifier
          (package_identifier)
          (dot_identifier
            (dot_uppercase_identifier)))
        (qualified_type_identifier
          (package_identifier)
          (dot_identifier
            (dot_uppercase_identifier))))
      (trait_method_declaration
        (function_identifier
          (lowercase_identifier))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (return_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))
      (semicolon
        (automatic_semicolon)))))

================================================================================
Default implementations for methods in trait
================================================================================
trait MyShow {
  repr(Self) -> String
  str (Self) -> String // it has a default implementation
}

impl MyShow with str(self : Self) -> String {
  // default implementation of str
  self.repr()
}

type MyInt Int
fn repr(self:MyInt) -> String {
  self.0.to_string()
}
--------------------------------------------------------------------------------

(structure
  (statement_expression
    (trait_definition
      (identifier
        (uppercase_identifier))
      (trait_method_declaration
        (function_identifier
          (lowercase_identifier))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (return_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))
      (semicolon
        (automatic_semicolon))
      (trait_method_declaration
        (function_identifier
          (lowercase_identifier))
        (trait_method_parameter
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))
        (return_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))
      (comment)
      (semicolon
        (automatic_semicolon))))
  (semicolon
    (automatic_semicolon))
  (statement_expression
    (impl_definition
      (type_name
        (qualified_type_identifier
          (identifier
            (uppercase_identifier))))
      (function_identifier
        (lowercase_identifier))
      (parameters
        (parameter
          (lowercase_identifier)
          (type_annotation
            (colon)
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier))))))))
      (return_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))
      (block_expression
        (comment)
        (statement_expression
          (expression
            (pipeline_expression
              (compound_expression
                (simple_expression
                  (dot_apply_expression
                    (simple_expression
                      (qualified_identifier
                        (lowercase_identifier)))
                    (dot_identifier
                      (dot_lowercase_identifier))))))))
        (semicolon
          (automatic_semicolon)))))
  (semicolon
    (automatic_semicolon))
  (statement_expression
    (type_definition
      (identifier
        (uppercase_identifier))
      (type
        (apply_type
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))))))
  (semicolon
    (automatic_semicolon))
  (statement_expression
    (named_lambda_expression
      (function_identifier
        (lowercase_identifier))
      (parameters
        (parameter
          (lowercase_identifier)
          (type_annotation
            (colon)
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier))))))))
      (return_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))
      (block_expression
        (statement_expression
          (expression
            (pipeline_expression
              (compound_expression
                (simple_expression
                  (dot_apply_expression
                    (simple_expression
                      (access_expression
                        (simple_expression
                          (qualified_identifier
                            (lowercase_identifier)))
                        (accessor
                          (dot))))
                    (dot_identifier
                      (dot_lowercase_identifier))))))))
        (semicolon
          (automatic_semicolon))))))
